{"ast":null,"code":"var _jsxFileName = \"/Users/a687000/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(); //call the constructor function of the component class\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }; //locate in class app\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }, () => {\n      console.log(this.state);\n    }));\n  }\n\n  render() {\n    const filtermonster = this.state.monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(this.state.searchField);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"Search Monsters\",\n        onChange: event => {\n          const searchField = event.target.value.toLocaleLowerCase();\n          this.setState(() => {\n            return {\n              searchField\n            };\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), filtermonster.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: monster.name\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a687000/monsters-rolodex/src/App.js"],"names":["React","Component","logo","App","constructor","state","monsters","searchField","componentDidMount","fetch","then","response","json","users","setState","console","log","render","filtermonster","filter","monster","name","toLocaleLowerCase","includes","event","target","value","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;;;AACA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAG;AACZ,YADY,CACJ;;AACR,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,WAAW,EAAC;AAFD,KAAb,CAFY,CAMZ;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,KAAD,IAAW,KAAKC,QAAL,CACf,MAAM;AACJ,aAAO;AAAER,QAAAA,QAAQ,EAAEO;AAAZ,OAAP;AACD,KAHc,EAIf,MAAM;AACJE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACD,KANc,CAFnB;AASD;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAG,KAAKb,KAAL,CAAWC,QAAX,CAAoBa,MAApB,CAA4BC,OAAD,IAAa;AAC5D,aAAOA,OAAO,CAACC,IAAR,CAAaC,iBAAb,GAAiCC,QAAjC,CAA0C,KAAKlB,KAAL,CAAWE,WAArD,CAAP;AACD,KAFqB,CAAtB;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAA4C,QAAA,WAAW,EAAC,iBAAxD;AACE,QAAA,QAAQ,EACLiB,KAAD,IAAW;AACT,gBAAMjB,WAAW,GAAGiB,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBJ,iBAAnB,EAApB;AACA,eAAKR,QAAL,CAAc,MAAI;AAChB,mBAAO;AAACP,cAAAA;AAAD,aAAP;AACD,WAFD;AAGD;AAPL;AAAA;AAAA;AAAA;AAAA,cADF,EAUIW,aAAa,CAACS,GAAd,CAAmBP,OAAD,IAAa;AAC7B,4BAAO;AAAA,oBACJA,OAAO,CAACC;AADJ,WAASD,OAAO,CAACQ,EAAjB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGD,OAJD,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AA/CyB;;AAkD5B,eAAezB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nclass App extends Component {\n  constructor() {\n    super();//call the constructor function of the component class\n    this.state = {\n      monsters: [],\n      searchField:''\n    };\n    //locate in class app\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState(\n        () => {\n          return { monsters: users }\n        },\n        () => {\n          console.log(this.state);\n        }));\n  }\n\n  render() {\n    const filtermonster = this.state.monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(this.state.searchField);\n    });\n\n    return (\n      <div className=\"App\">\n        <input className='search-box' type='search' placeholder='Search Monsters'\n          onChange={\n            (event) => {\n              const searchField = event.target.value.toLocaleLowerCase();\n              this.setState(()=>{\n                return {searchField}\n              });\n            }} />\n        {\n          filtermonster.map((monster) => {\n            return <h1 key={monster.id}>\n              {monster.name}\n            </h1>;\n          })\n        }\n      </div>\n    );\n\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}